# docker-compose -f xxx.yml up [ -d ]
# docker-compose --compatibility up -d , 由于做了资源限制, 并且没有使用swarm, 所以要加上--compatibility参数, 不然会报错

# 默认文件名为docker-compose.yml时 , -f可以省略 , -d 是后台运行。

#安装 jenkins 运行docker ，需要在镜像内装docker client : yum install docker-client
#保存修改到镜像    docker commit -m "增加docker服务" "容器id" "镜像名"

version: "3.7"
services:
  mysql:
    #要启动的镜像名称
    image: mysql:5.7.35
    #启动的容器名称
    container_name: mysql
    privileged: true
    restart: on-failure:2
    #挂载
    volumes:
      - /home/zlf/docker_data/mysql/datadir:/var/lib/mysql
      - /home/zlf/docker_data/mysql/conf.d:/etc/mysql/conf.d
    #network_mode: host
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: "123456"
      #MYSQL_DATABASE: "数据库名称"
      #MYSQL_USER: "用户名"
      #MYSQL_PASSWORD: "用户密码"
    ports:
      - 3306:3306
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
    deploy:
      resources:
        limits:
          memory: 368m

  redis:
    image: docker.io/redis:latest
    container_name: redis
    privileged: true
    restart: always
    volumes:
      - /home/zlf/docker_data/redis/7001/redis.conf:/etc/redis/redis.conf
      - /home/zlf/docker_data/redis/7001/data:/data
    environment:
      TZ: Asia/Shanghai
    ports:
      - 7001:7001
    command: redis-server /etc/redis/redis.conf
    deploy:
      resources:
        limits:
          memory: 256m

#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    privileged: true
#    restart: always
#    volumes:
#      - /home/zlf/docker_data/nginx/nginx.conf:/etc/nginx/nginx.conf
#    environment:
#      TZ: Asia/Shanghai
#    ports:
#      - 8090:8090

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: elasticsearch
    privileged: true
    restart: on-failure:2
    volumes:
      - /home/zlf/docker_data/elasticsearch/logs:/usr/share/elasticsearch/logs
      - /home/zlf/docker_data/elasticsearch/data:/usr/share/elasticsearch/data
      - /home/zlf/docker_data/elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - /home/zlf/docker_data/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    #network_mode: host
    environment:
      TZ: Asia/Shanghai
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    ports:
      - 9200:9200
      - 9300:9300
    deploy:
      resources:
        limits:
          memory: 1024m

  sentinel:
    image: bladex/sentinel-dashboard
    container_name: sentinel-dashboard
    privileged: true
    restart: on-failure:2
    environment:
      TZ: Asia/Shanghai
    ports:
      - 8858:8858
      - 8719:8719
    deploy:
      resources:
        limits:
          memory: 368m

  #数据库无法使用外部连接？？？ (表在 nacos 中的 conf 目录)
  nacos:
    image: nacos/nacos-server:2.0.3
    container_name: nacos
    privileged: true
    restart: on-failure:2
    volumes:
      - /home/zlf/docker_data/nacos/logs:/home/nacos/logs
    #network_mode: host
    environment:
      TZ: Asia/Shanghai
      MODE: standalone
      JVM_XMS: 512m
      JVM_XMX: 1024m
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_DATABASE_NUM: 1
      MYSQL_SERVICE_HOST: 192.168.3.198
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
    ports:
      - 8848:8848
      - 9848:9848
    depends_on:
      - mysql
    deploy:
      resources:
        limits:
          memory: 512m

  seata:
    image: docker.io/seataio/seata-server:1.3.0
    container_name: seata
    privileged: true
    restart: on-failure:2
    volumes:
      - /home/zlf/docker_data/seata/config/file.conf:/seata-server/resources/file.conf
      - /home/zlf/docker_data/seata/config/registry.conf:/seata-server/resources/registry.conf
      - /home/zlf/docker_data/seata/logs:/root/logs
    #network_mode: host
    environment:
      TZ: Asia/Shanghai
      SEATA_PORT: 8891
      SEATA_IP: 192.168.181.131
    ports:
      - 8891:8891
    depends_on:
      - nacos
    deploy:
      resources:
        limits:
          memory: 368m

  #链路追踪
  skywalking-oap:
    image: apache/skywalking-oap-server:8.7.0-es7
    container_name: skywalking-oap
    privileged: true
    restart: on-failure:2
    volumes:
      - /home/zlf/docker_data/skywalking/skywalking-oap/config/application.yml:/skywalking/config/application.yml
    #network_mode: host
    environment:
      SW_STORAGE: elasticsearch7  # 指定ES
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      #SW_ES_USER: elastic
      #SW_ES_USER_PASSWORD: wshoto@2020
      TZ: Asia/Shanghai
    #使用别名时需要使用links
    links:
      - elasticsearch
    ports:
      - 11800:11800
      - 12800:12800
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 512m
  #链路追踪
  skywalking-ui:
    image: apache/skywalking-ui:8.7.0
    container_name: skywalking-ui
    privileged: true
    restart: on-failure:2
    #network_mode: host
    environment:
      SW_OAP_ADDRESS: http://skywalking-oap:12800
      TZ: Asia/Shanghai
    links:
      - skywalking-oap
    ports:
      - 8868:8080
    depends_on:
      - skywalking-oap
    deploy:
      resources:
        limits:
          memory: 368m

  jenkins:
    image: jenkins/jenkins:2.332.3-centos7-jdk8
    container_name: jenkins
    privileged: true
    user: root
    restart: on-failure:2
    volumes:
      - /home/zlf/docker_data/jenkins:/var/jenkins_home
      #jenkins容器需要实例化其他Docker容器，则该守护进程是必需的
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/zlf/mysoft/apache-maven-3.8.5:/usr/local/maven
      - /usr/local/git:/usr/local/git
      - /usr/java/jdk1.8.0_131:/usr/local/java
    #network_mode: host
    environment:
      TZ: Asia/Shanghai
      JAVA_OPTS: '-Djava.util.logging.config.file=/home/zlf/docker_data/jenkins/log.properties'
    ports:
      - 8089:8080
      - 50000:50000
    deploy:
      resources:
        limits:
          memory: 1216m

#  srs:
#    image: ossrs/srs:4
#    container_name: srs
#    privileged: true
#    restart: always
#    volumes:
#      - /home/zlf/docker_data/srs/srs.conf:/usr/local/srs/conf/srs.conf
#    environment:
#      TZ: Asia/Shanghai
#    ports:
#      - 1935:1935
#      - 1985:1985
#      - 8080:8080
